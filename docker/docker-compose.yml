version: '3.8'

services:
  asys-i-hpc:
    build:
      context: ..
      dockerfile: docker/Dockerfile.hpc
    # The container needs access to the host's IPC namespace to share
    # memory and message queues with the target application running on the host.
    ipc: host
    # It also needs extended privileges for some system-level operations.
    privileged: true
    # Mount the project directory into the container.
    volumes:
      - ../:/app
      # Example of mounting a separate, fast storage for outputs.
      # - /path/to/fast_storage:/fast_storage
    
    # Environment variables can be used to pass configuration.
    environment:
      # Example: Pointing to a configuration file inside the container.
      - ASYS_I_CONFIG_PATH=/app/configs/profile_hpc.yaml
      # Example: Overriding the output directory from the config file.
      # This allows output data to be written to a mounted volume easily.
      # - ASYS_I_OUTPUT_DIR=/fast_storage/outputs/my_run_1
    
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # This is a placeholder for the target application that is being observed.
  # In a real scenario, this might be a separate container or a process
  # running directly on the host.
  target_application:
    image: "pytorch/pytorch:2.1.0-cuda12.1-cudnn8-runtime"
    # Also needs to share the IPC namespace.
    ipc: host
    shm_size: '${SHM_SIZE_G:-32}g' # Use env var SHM_SIZE_G, default to 32g
    command: tail -f /dev/null # Keep container running
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
